version: "3"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Frontend-Dockerfile
    container_name: frontend
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - AUTH_API_ADDRESS=http://auth-api:8081
      - TODOS_API_ADDRESS=http://todos-api:8082
    depends_on:
      - auth-api
      - todos-api
    command: npm run dev
    networks:
      - devops_network

  auth-api:
    build:
      context: ./auth-api
      dockerfile: Auth-Dockerfile
    container_name: auth-api
    ports:
      - "${AUTH_API_PORT}:8081"
    env_file:
      - .env
    depends_on:
      - users-api
    networks:
      - devops_network

  todos-api:
    build:
      context: ./todos-api
      dockerfile: Todo-Dockerfile
    container_name: todos-api
    ports:
      - "8082:8082"
    environment:
      - TODOS_API_PORT=${TODOS_API_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_CHANNEL=${REDIS_CHANNEL}
    depends_on:
      - redis-queue
    networks:
      - devops_network

  users-api:
    build:
      context: ./users-api
      dockerfile: User-Dockerfile
    container_name: users-api
    ports:
      - "${SERVER_PORT}:8083"
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - devops_network

  log-processor:
    build:
      context: ./log-message-processor
      dockerfile: Log-Dockerfile
    container_name: log
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_CHANNEL=${REDIS_CHANNEL}
    depends_on:
      - redis-queue
    networks:
      - devops_network

  redis-queue:
    image: redis:alpine
    container_name: redis-queue
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - devops_network

volumes:
  redis_data:

networks:
  devops_network:
    name: devops_network